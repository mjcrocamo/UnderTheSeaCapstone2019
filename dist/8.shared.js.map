{"version":3,"sources":["webpack:///./client/components/UnderTheSeaQueries.js","webpack:///./client/components/SourcesPage.js"],"names":["seaAnimalDetailsQuery","gql","welcomePageQuery","welcomeTopicsQuery","seaAnimalListQuery","oceanConservationQuery","sourcesQuery","SOURCES","UNDER_THE_SEA_FONT_SIZES","SOURCE_NAME","GAMES","SOURCE_IDS","VIDEOS","WEBSITES","COURSES","DOCUMENTATION","IMAGES","SourcesPage","classes","useSourceStyles","games","useQuery","variables","typeId","videos","websites","courses","sourcesMap","title","data","className","root","variant","GLOBAL_FONT_VARIANT","gutterBottom","color","component","section","map","loading","key","fontWeight","fontSize","list","sources","id","url","name","source","divider","rel","sourceTitle","m"],"mappings":"+zEAcO,IAAMA,EAAwBC,IAAH,KAoDrBC,EAAmBD,IAAH,KAoBhBE,EAAqBF,IAAH,KAgBlBG,EAAqBH,IAAH,KAoBlBI,EAAyBJ,IAAH,KAmBtBK,EAAeL,IAAH,M,iKCnHjBM,EAAyBC,IAAzBD,QAASE,EAAgBD,IAAhBC,YACTC,EAA4DC,IAA5DD,MAAOE,EAAqDD,IAArDC,OAAQC,EAA6CF,IAA7CE,SAAUC,EAAmCH,IAAnCG,QAASC,EAA0BJ,IAA1BI,cAAeC,EAAWL,IAAXK,OAkG1CC,UA7FK,WAClB,IAAMC,EAAUC,cACVC,EAAQC,YAASf,IAAc,CAAEgB,UAAW,CAAEC,OAAQb,KACtDc,EAASH,YAASf,IAAc,CAAEgB,UAAW,CAAEC,OAAQX,KACvDa,EAAWJ,YAASf,IAAc,CAAEgB,UAAW,CAAEC,OAAQV,KACzDa,EAAUL,YAASf,IAAc,CAAEgB,UAAW,CAAEC,OAAQT,KAMxDa,EAAa,CACjB,CACEC,MAAO,eACPC,KAAMT,GAER,CACEQ,MAAO,kBACPC,KAAMJ,GAER,CACEG,MAAO,gBACPC,KAhBWR,YAASf,IAAc,CAAEgB,UAAW,CAAEC,OAAQP,MAkB3D,CACEY,MAAO,gBACPC,KAAML,GAER,CACEI,MAAO,UACPC,KAAMH,GAER,CACEE,MAAO,gBACPC,KA3BkBR,YAASf,IAAc,CAC3CgB,UAAW,CAAEC,OAAQR,OA8BvB,OACE,yBAAKe,UAAWZ,EAAQa,MACtB,kBAAC,IAAD,CACEC,QAASC,IACTC,cAAY,EACZC,MAAM,cACNC,UAAU,KACVN,UAAWZ,EAAQmB,SALrB,iBASCV,EAAWW,KAAI,oBAAGV,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACdA,EAAKU,QACH,kBAAC,IAAD,MAEA,yBAAKT,UAAWZ,EAAQmB,QAASG,IAAKZ,GACpC,kBAAC,IAAD,CACEI,QAASC,IACTE,MAAM,cACNC,UAAU,OAEV,kBAAC,IAAD,CAAKK,WAAW,mBAAmBC,SAAU,IAC1Cd,IAGL,kBAAC,IAAD,CAAME,UAAWZ,EAAQyB,MACtBd,aADH,YACGA,EAAMA,YADT,uBACG,EAAYe,eADf,aACG,EAAqBN,KAAI,kBAAGO,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,OAAlB,OACxB,kBAAC,IAAD,CAAUC,SAAO,EAACT,IAAKK,GACrB,kBAAC,KAAD,GAAMK,IAAI,YAAV,YAAyB,cAAzB,aAA4CJ,GAA5C,GACE,kBAAC,IAAD,CAAYV,UAAU,OACpB,kBAAC,IAAD,CACEN,UAAWZ,EAAQiC,YACnBV,WAAW,mBACXC,SAAUjC,EACV2C,EAAG,GAEFL,IAGL,kBAAC,IAAD,CAAYZ,MAAM,cAAcC,UAAU,OACxC,kBAAC,IAAD,CAAKM,SAAUnC,EAAS6C,EAAG,GACxBJ","file":"8.shared.js","sourcesContent":["/**\n * Under the Sea GraphQL queries\n *\n * Digital Media Design - Software Engineering Capstone 2019\n * Under the Sea: An interactive guide to our worlds oceans\n * @author Maggie Crocamo\n * {mjcrocamo@gmail.com, mjc494@g.harvard.edu}\n **/\n\nimport gql from 'graphql-tag';\n\n/**\n * Sea Animal Details Query\n */\nexport const seaAnimalDetailsQuery = gql`\n  query SeaAnimalDetailsQuery($seaAnimalId: ID!) {\n    seaAnimal(id: $seaAnimalId) {\n      __typename\n      id\n      name\n      binomialName\n      minSizeInches\n      maxSizeInches\n      minSizeFeet\n      maxSizeFeet\n      minWeightlbs\n      maxWeightlbs\n      animalClass\n      diet\n      averageLifeSpan\n      images {\n        __typename\n        id\n        url\n        alt\n      }\n      descriptions {\n        __typename\n        id\n        content\n      }\n      links {\n        __typename\n        id\n        name\n        url\n      }\n      videos {\n        __typename\n        id\n        url\n        alt\n      }\n      mainImage {\n        __typename\n        id\n        url\n        alt\n      }\n    }\n  }\n`;\n\n/**\n * Welcome Page Query\n */\nexport const welcomePageQuery = gql`\n  query WelcomePageQuery {\n    seaAnimals {\n      __typename\n      id\n      name\n      binomialName\n      mainImage {\n        __typename\n        id\n        url\n        alt\n      }\n    }\n  }\n`;\n\n/**\n * Welcome Topics Query\n */\nexport const welcomeTopicsQuery = gql`\n  query WelcomeTopicsQuery {\n    welcomeTopics {\n      __typename\n      id\n      title\n      image\n      description\n      route\n    }\n  }\n`;\n\n/**\n * Sea Animal List Query\n */\nexport const seaAnimalListQuery = gql`\n  query SeaAnimalListQuery {\n    seaAnimals {\n      __typename\n      id\n      name\n      binomialName\n      mainImage {\n        __typename\n        id\n        url\n        alt\n      }\n    }\n  }\n`;\n\n/**\n * Ocean Conservation Query\n */\nexport const oceanConservationQuery = gql`\n  query OceanConservationQuery {\n    conservationLinks {\n      __typename\n      id\n      name\n      url\n      descriptions {\n        __typename\n        id\n        content\n      }\n    }\n  }\n`;\n\n/**\n * Sources Query\n */\nexport const sourcesQuery = gql`\n  query SourcesQuery($typeId: ID) {\n    sources(typeId: $typeId) {\n      __typename\n      id\n      name\n      url\n      source\n    }\n  }\n`;\n","/**\n * Sources Page Component\n * Shows users all of the sources for information/images on the site\n *\n * Digital Media Design - Software Engineering Capstone 2019\n * Under the Sea: An interactive guide to our worlds oceans\n * @author Maggie Crocamo\n * {mjcrocamo@gmail.com, mjc494@g.harvard.edu}\n **/\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { useQuery } from '@apollo/react-hooks';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { sourcesQuery } from './UnderTheSeaQueries';\nimport { useSourceStyles } from './UnderTheSeaStyles';\nimport {\n  UNDER_THE_SEA_FONT_SIZES,\n  GLOBAL_FONT_VARIANT,\n  SOURCE_IDS\n} from './UnderTheSeaConstants';\nimport { SourcesPlaceholder } from './UnderTheSeaPlaceholders';\n\nconst { SOURCES, SOURCE_NAME } = UNDER_THE_SEA_FONT_SIZES;\nconst { GAMES, VIDEOS, WEBSITES, COURSES, DOCUMENTATION, IMAGES } = SOURCE_IDS;\n\n/**\n * Sources Page Component\n */\nconst SourcesPage = () => {\n  const classes = useSourceStyles();\n  const games = useQuery(sourcesQuery, { variables: { typeId: GAMES } });\n  const videos = useQuery(sourcesQuery, { variables: { typeId: VIDEOS } });\n  const websites = useQuery(sourcesQuery, { variables: { typeId: WEBSITES } });\n  const courses = useQuery(sourcesQuery, { variables: { typeId: COURSES } });\n  const images = useQuery(sourcesQuery, { variables: { typeId: IMAGES } });\n  const documentation = useQuery(sourcesQuery, {\n    variables: { typeId: DOCUMENTATION }\n  });\n\n  const sourcesMap = [\n    {\n      title: 'Game Sources',\n      data: games\n    },\n    {\n      title: 'Content Sources',\n      data: websites\n    },\n    {\n      title: 'Image Sources',\n      data: images\n    },\n    {\n      title: 'Video Sources',\n      data: videos\n    },\n    {\n      title: 'Courses',\n      data: courses\n    },\n    {\n      title: 'Documentation',\n      data: documentation\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        variant={GLOBAL_FONT_VARIANT}\n        gutterBottom\n        color=\"textPrimary\"\n        component=\"h2\"\n        className={classes.section}\n      >\n        Sources Cited\n      </Typography>\n      {sourcesMap.map(({ title, data }) =>\n        data.loading ? (\n          <SourcesPlaceholder />\n        ) : (\n          <div className={classes.section} key={title}>\n            <Typography\n              variant={GLOBAL_FONT_VARIANT}\n              color=\"textPrimary\"\n              component=\"div\"\n            >\n              <Box fontWeight=\"fontWeightMedium\" fontSize={32}>\n                {title}\n              </Box>\n            </Typography>\n            <List className={classes.list}>\n              {data?.data?.sources?.map(({ id, url, name, source }) => (\n                <ListItem divider key={id}>\n                  <Link rel=\"noopener\" rel=\"noreferrer\" href={url}>\n                    <Typography component=\"div\">\n                      <Box\n                        className={classes.sourceTitle}\n                        fontWeight=\"fontWeightMedium\"\n                        fontSize={SOURCE_NAME}\n                        m={1}\n                      >\n                        {name}\n                      </Box>\n                    </Typography>\n                    <Typography color=\"textPrimary\" component=\"div\">\n                      <Box fontSize={SOURCES} m={1}>\n                        {source}\n                      </Box>\n                    </Typography>\n                  </Link>\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SourcesPage;\n"],"sourceRoot":""}