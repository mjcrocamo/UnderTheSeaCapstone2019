{"version":3,"sources":["webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack:///./node_modules/graphql-tag/src/index.js","webpack:///./node_modules/graphql/jsutils/devAssert.mjs","webpack:///./node_modules/graphql/jsutils/defineToJSON.mjs","webpack:///./node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/language/printLocation.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/language/kinds.mjs","webpack:///./node_modules/graphql/language/source.mjs","webpack:///./node_modules/graphql/jsutils/defineToStringTag.mjs","webpack:///./node_modules/graphql/language/tokenKind.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/parser.mjs"],"names":["OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","QueryData","_super","_a","forceUpdate","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","observableQueryFields","currentResult","partial","errors","length","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","updatedOptions","queryDataRef","current","queryData","memoFn","key","ref","memo","value","queryResult","useQuery","useLazyQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","module","exports","strings","raw","slice","freeze","defineProperties","parse","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","toString","map","d","loc","startToken","endToken","valueType","ast","astFragmentMap","definitions","i","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","processFragments","gql","args","Array","arguments","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","devAssert","condition","message","Boolean","defineToJSON","classObject","fn","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","printPrefixedLines","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","_locations","_positions","reduce","list","pos","_extensions","originalExtensions","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","create","output","_i2","_error$nodes2","_i4","_error$locations2","printError","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","toStringTag","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","readToken","Tok","prev","printCharCode","code","isNaN","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","a","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","Parser","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind"],"mappings":"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","file":"1.shared.js","sourcesContent":["import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, forceUpdate = _a.forceUpdate;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.forceUpdate();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.forceUpdate = forceUpdate;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined\n                }\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _this = this;\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n            setTimeout(function () {\n                _this.currentObservable.query &&\n                    _this.currentObservable.query.resetQueryStoreErrors();\n            });\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var treeRenderingInitiated = this.context && this.context.renderPromises;\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = {\n            loading: true,\n            networkStatus: NetworkStatus.loading,\n            called: true,\n            data: undefined\n        };\n        if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n            return ssrLoading;\n        }\n        var result;\n        if (treeRenderingInitiated) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.context &&\n            this.context.renderPromises &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        if (this.context && this.context.renderPromises) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.context && this.context.renderPromises) {\n                this.context.renderPromises.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.forceUpdate();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.forceUpdate();\n                }\n            }\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign(__assign({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign(__assign({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery)\n            return;\n        var _a = obsQuery.getCurrentResult(), data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    if (!queryDataRef.current) {\n        queryDataRef.current = new QueryData({\n            options: updatedOptions,\n            context: context,\n            forceUpdate: forceUpdate\n        });\n    }\n    var queryData = queryDataRef.current;\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data\n    ]);\n    useEffect(function () {\n        return function () { return queryData.cleanup(); };\n    }, []);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign(__assign({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);\n","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n// @internal\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n"],"sourceRoot":""}